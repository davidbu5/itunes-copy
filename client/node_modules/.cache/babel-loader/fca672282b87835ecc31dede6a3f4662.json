{"ast":null,"code":"var _jsxFileName = \"C:\\\\Git\\\\moshe\\\\itunes-app\\\\src\\\\components\\\\searchConsole\\\\searchConsole.tsx\";\nimport * as React from 'react';\nimport SearchBox from '../searchBox/searchBox';\nimport SearchResults from './searchResults/searchResults';\nimport axios from 'axios';\nimport qs from 'query-string';\nexport default class SearchConsole extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSearch = this.handleSearch.bind(this);\n    const queryText = qs.parse(props.location.search).queryText;\n\n    if (!queryText) {\n      return;\n    }\n\n    this.state = {\n      items: [],\n      queryText\n    };\n    this.handleSearch(queryText);\n  }\n\n  async handleSearch(queryText) {\n    if (queryText === \"\") {\n      return;\n    }\n\n    this.props.history.push(\"/search?queryText=\".concat(queryText));\n    const url = \"http://localhost/search?queryText=\".concat(queryText.replace(' ', '+'));\n    const response = await axios.get(url);\n    this.setState({\n      items: response.data.results,\n      queryText\n    });\n  }\n\n  render() {\n    const items = this.state.items;\n    return React.createElement(React.Fragment, null, React.createElement(SearchBox, {\n      onSearch: this.handleSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(SearchResults, {\n      items: items,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Git/moshe/itunes-app/src/components/searchConsole/searchConsole.tsx"],"names":["React","SearchBox","SearchResults","axios","qs","SearchConsole","Component","constructor","props","handleSearch","bind","queryText","parse","location","search","state","items","history","push","url","replace","response","get","setState","data","results","render"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,cAAf;AAEA,eAAe,MAAMC,aAAN,SAA4BL,KAAK,CAACM,SAAlC,CAAoF;AAC/FC,EAAAA,WAAW,CAACC,KAAD,EAAa;AACpB,UAAMA,KAAN;AAEA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AAEA,UAAMC,SAAS,GAAGP,EAAE,CAACQ,KAAH,CAASJ,KAAK,CAACK,QAAN,CAAeC,MAAxB,EAAgCH,SAAlD;;AACA,QAAI,CAACA,SAAL,EAAgB;AACZ;AACH;;AAED,SAAKI,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaL,MAAAA;AAAb,KAAb;AACA,SAAKF,YAAL,CAAkBE,SAAlB;AACH;;AAED,QAAMF,YAAN,CAAmBE,SAAnB,EAAsC;AAClC,QAAIA,SAAS,KAAK,EAAlB,EAAsB;AAClB;AACH;;AAED,SAAKH,KAAL,CAAWS,OAAX,CAAmBC,IAAnB,6BAA6CP,SAA7C;AAEA,UAAMQ,GAAG,+CAAwCR,SAAS,CAACS,OAAV,CAAkB,GAAlB,EAAuB,GAAvB,CAAxC,CAAT;AACA,UAAMC,QAAa,GAAG,MAAMlB,KAAK,CAACmB,GAAN,CAAUH,GAAV,CAA5B;AAEA,SAAKI,QAAL,CAAc;AAAEP,MAAAA,KAAK,EAAEK,QAAQ,CAACG,IAAT,CAAcC,OAAvB;AAAgCd,MAAAA;AAAhC,KAAd;AACH;;AAEDe,EAAAA,MAAM,GAAG;AAAA,UACGV,KADH,GACa,KAAKD,KADlB,CACGC,KADH;AAEL,WAAO,0CACH,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAE,KAAKP,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADG,EAEH,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAEO,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFG,CAAP;AAIH;;AAlC8F","sourcesContent":["import * as React from 'react';\r\nimport SearchBox from '../searchBox/searchBox';\r\nimport SearchResults from './searchResults/searchResults';\r\nimport axios from 'axios';\r\nimport qs from 'query-string';\r\n\r\nexport default class SearchConsole extends React.Component<any, { items: any, queryText: string }> {\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n\r\n        const queryText = qs.parse(props.location.search).queryText;\r\n        if (!queryText) {\r\n            return;\r\n        }\r\n\r\n        this.state = { items: [], queryText };\r\n        this.handleSearch(queryText);\r\n    }\r\n\r\n    async handleSearch(queryText: string) {\r\n        if (queryText === \"\") {\r\n            return;\r\n        }\r\n\r\n        this.props.history.push(`/search?queryText=${queryText}`);\r\n\r\n        const url = `http://localhost/search?queryText=${queryText.replace(' ', '+')}`;\r\n        const response: any = await axios.get(url);\r\n\r\n        this.setState({ items: response.data.results, queryText });\r\n    }\r\n\r\n    render() {\r\n        const { items } = this.state;\r\n        return <>\r\n            <SearchBox onSearch={this.handleSearch}></SearchBox>\r\n            <SearchResults items={items} ></SearchResults>\r\n        </>;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}