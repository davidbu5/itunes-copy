{"ast":null,"code":"var _jsxFileName = \"C:\\\\Git\\\\moshe\\\\client\\\\src\\\\components\\\\searchConsole\\\\searchConsole.tsx\";\nimport * as React from 'react';\nimport SearchBox from '../searchBox/searchBox';\nimport SearchResults from './searchResults/searchResults';\nimport axios from 'axios';\n;\nexport default class SearchConsole extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSearch = this.handleSearch.bind(this);\n    const queryText = props.match.params.queryText;\n\n    if (!queryText) {\n      return;\n    }\n\n    if (!axios.defaults.headers.Authorization) {\n      const errorMessage = \"אינכם מחוברים לחשבון.\";\n      this.state = {\n        errorMessage\n      };\n    } else {\n      this.state = {\n        items: [],\n        queryText\n      };\n      this.search(queryText);\n    }\n  }\n\n  handleSearch(queryText) {\n    if (queryText === \"\") {\n      return;\n    }\n\n    this.props.history.push(\"/search/\".concat(queryText, \"?\"));\n    this.search(queryText);\n  }\n\n  async search(queryText) {\n    this.setState({\n      isSearching: true\n    });\n    const url = \"http://localhost/search?queryText=\".concat(queryText.replace(' ', '+'));\n    const response = await axios.get(url).catch(() => {\n      this.setState({\n        isSearching: false\n      });\n    });\n    this.setState({\n      items: response.data.results,\n      queryText,\n      isSearching: false\n    });\n  }\n\n  render() {\n    const items = this.state ? this.state.items || [] : [];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.state.errorMessage ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, this.state.errorMessage) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(SearchBox, {\n      onSearch: this.handleSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(SearchResults, {\n      items: items,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/Git/moshe/client/src/components/searchConsole/searchConsole.tsx"],"names":["React","SearchBox","SearchResults","axios","SearchConsole","Component","constructor","props","handleSearch","bind","queryText","match","params","defaults","headers","Authorization","errorMessage","state","items","search","history","push","setState","isSearching","url","replace","response","get","catch","data","results","render"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAOC;AAED,eAAe,MAAMC,aAAN,SAA4BJ,KAAK,CAACK,SAAlC,CAAsE;AAEjFC,EAAAA,WAAW,CAACC,KAAD,EAAa;AACpB,UAAMA,KAAN;AAEA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AAEA,UAAMC,SAAS,GAAGH,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmBF,SAArC;;AACA,QAAI,CAACA,SAAL,EAAgB;AACZ;AACH;;AAED,QAAI,CAACP,KAAK,CAACU,QAAN,CAAeC,OAAf,CAAuBC,aAA5B,EAA2C;AACvC,YAAMC,YAAY,GAAG,uBAArB;AACA,WAAKC,KAAL,GAAa;AAAED,QAAAA;AAAF,OAAb;AACH,KAHD,MAIK;AACD,WAAKC,KAAL,GAAa;AAAEC,QAAAA,KAAK,EAAE,EAAT;AAAaR,QAAAA;AAAb,OAAb;AACA,WAAKS,MAAL,CAAYT,SAAZ;AACH;AACJ;;AAEDF,EAAAA,YAAY,CAACE,SAAD,EAAoB;AAC5B,QAAIA,SAAS,KAAK,EAAlB,EAAsB;AAClB;AACH;;AAED,SAAKH,KAAL,CAAWa,OAAX,CAAmBC,IAAnB,mBAAmCX,SAAnC;AAEA,SAAKS,MAAL,CAAYT,SAAZ;AACH;;AAED,QAAMS,MAAN,CAAaT,SAAb,EAAgC;AAC5B,SAAKY,QAAL,CAAc;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAAd;AACA,UAAMC,GAAG,+CAAwCd,SAAS,CAACe,OAAV,CAAkB,GAAlB,EAAuB,GAAvB,CAAxC,CAAT;AACA,UAAMC,QAAa,GAAG,MAAMvB,KAAK,CAACwB,GAAN,CAAUH,GAAV,EAAeI,KAAf,CAAqB,MAAM;AACnD,WAAKN,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAE;AAAf,OAAd;AACH,KAF2B,CAA5B;AAIA,SAAKD,QAAL,CAAc;AAAEJ,MAAAA,KAAK,EAAEQ,QAAQ,CAACG,IAAT,CAAcC,OAAvB;AAAgCpB,MAAAA,SAAhC;AAA2Ca,MAAAA,WAAW,EAAE;AAAxD,KAAd;AACH;;AAEDQ,EAAAA,MAAM,GAAG;AACL,UAAMb,KAAK,GAAG,KAAKD,KAAL,GAAc,KAAKA,KAAL,CAAWC,KAAX,IAAoB,EAAlC,GAAwC,EAAtD;AACA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACF,KAAKD,KAAL,CAAWD,YAAX,GAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKC,KAAL,CAAWD,YAAjB,CAA1B,GACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAE,KAAKR,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAEU,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAFD,CAAP;AAOH;;AAnDgF","sourcesContent":["import * as React from 'react';\r\nimport SearchBox from '../searchBox/searchBox';\r\nimport SearchResults from './searchResults/searchResults';\r\nimport axios from 'axios';\r\n\r\ninterface ISearchConsoleState {\r\n    items?: any;\r\n    queryText?: string;\r\n    errorMessage?: string;\r\n    isSearching?: boolean;\r\n};\r\n\r\nexport default class SearchConsole extends React.Component<any, ISearchConsoleState> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n\r\n        const queryText = props.match.params.queryText;\r\n        if (!queryText) {\r\n            return;\r\n        }\r\n\r\n        if (!axios.defaults.headers.Authorization) {\r\n            const errorMessage = \"אינכם מחוברים לחשבון.\";\r\n            this.state = { errorMessage };\r\n        }\r\n        else {\r\n            this.state = { items: [], queryText };\r\n            this.search(queryText);\r\n        }\r\n    }\r\n\r\n    handleSearch(queryText: string) {\r\n        if (queryText === \"\") {\r\n            return;\r\n        }\r\n\r\n        this.props.history.push(`/search/${queryText}?`);\r\n\r\n        this.search(queryText);\r\n    }\r\n\r\n    async search(queryText: string) {\r\n        this.setState({ isSearching: true });\r\n        const url = `http://localhost/search?queryText=${queryText.replace(' ', '+')}`;\r\n        const response: any = await axios.get(url).catch(() => {\r\n            this.setState({ isSearching: false });\r\n        });\r\n\r\n        this.setState({ items: response.data.results, queryText, isSearching: false });\r\n    }\r\n\r\n    render() {\r\n        const items = this.state ? (this.state.items || []) : [];\r\n        return <div>\r\n            {this.state.errorMessage ? <div>{this.state.errorMessage}</div> :\r\n                <div>\r\n                    <SearchBox onSearch={this.handleSearch}></SearchBox>\r\n                    <SearchResults items={items} ></SearchResults>\r\n                </div>}\r\n        </div>;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}