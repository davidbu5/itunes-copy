{"ast":null,"code":"var _jsxFileName = \"C:\\\\Git\\\\moshe\\\\itunes-app\\\\src\\\\components\\\\searchConsole\\\\searchConsole.tsx\";\nimport * as React from 'react';\nimport SearchBox from '../searchBox/searchBox';\nimport SearchResults from './searchResults/searchResults';\nimport axios from 'axios';\nimport qs from 'query-string';\nexport default class SearchConsole extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSearch = this.handleSearch.bind(this);\n    const queryText = qs.parse(props.location.search).queryText;\n\n    if (!queryText) {\n      return;\n    }\n\n    this.state = {\n      items: [],\n      queryText\n    };\n    this.search(queryText);\n  }\n\n  handleSearch(queryText) {\n    if (queryText === \"\") {\n      return;\n    }\n\n    this.props.history.push({\n      pathname: \"/search\",\n      search: \"?queryText=\".concat(queryText)\n    });\n  }\n\n  async search(queryText) {\n    const url = \"http://localhost/search?queryText=\".concat(queryText.replace(' ', '+'));\n    const response = await axios.get(url);\n    this.setState({\n      items: response.data.results,\n      queryText\n    });\n  }\n\n  render() {\n    const items = this.state ? this.state.items || [] : [];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(SearchBox, {\n      onSearch: this.handleSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(SearchResults, {\n      items: items,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Git/moshe/itunes-app/src/components/searchConsole/searchConsole.tsx"],"names":["React","SearchBox","SearchResults","axios","qs","SearchConsole","Component","constructor","props","handleSearch","bind","queryText","parse","location","search","state","items","history","push","pathname","url","replace","response","get","setState","data","results","render"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,cAAf;AAEA,eAAe,MAAMC,aAAN,SAA4BL,KAAK,CAACM,SAAlC,CAAoF;AAC/FC,EAAAA,WAAW,CAACC,KAAD,EAAa;AACpB,UAAMA,KAAN;AAEA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AAEA,UAAMC,SAAS,GAAGP,EAAE,CAACQ,KAAH,CAASJ,KAAK,CAACK,QAAN,CAAeC,MAAxB,EAAgCH,SAAlD;;AACA,QAAI,CAACA,SAAL,EAAgB;AACZ;AACH;;AAED,SAAKI,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaL,MAAAA;AAAb,KAAb;AACA,SAAKG,MAAL,CAAYH,SAAZ;AACH;;AAEDF,EAAAA,YAAY,CAACE,SAAD,EAAoB;AAC5B,QAAIA,SAAS,KAAK,EAAlB,EAAsB;AAClB;AACH;;AAED,SAAKH,KAAL,CAAWS,OAAX,CAAmBC,IAAnB,CAAwB;AACpBC,MAAAA,QAAQ,WADY;AAEpBL,MAAAA,MAAM,uBAAgBH,SAAhB;AAFc,KAAxB;AAIH;;AAED,QAAMG,MAAN,CAAaH,SAAb,EAAgC;AAC5B,UAAMS,GAAG,+CAAwCT,SAAS,CAACU,OAAV,CAAkB,GAAlB,EAAuB,GAAvB,CAAxC,CAAT;AACA,UAAMC,QAAa,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CAAUH,GAAV,CAA5B;AAEA,SAAKI,QAAL,CAAc;AAAER,MAAAA,KAAK,EAAEM,QAAQ,CAACG,IAAT,CAAcC,OAAvB;AAAgCf,MAAAA;AAAhC,KAAd;AACH;;AAEDgB,EAAAA,MAAM,GAAG;AACL,UAAMX,KAAK,GAAG,KAAKD,KAAL,GAAc,KAAKA,KAAL,CAAWC,KAAX,IAAoB,EAAlC,GAAwC,EAAtD;AACA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACH,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAE,KAAKP,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADG,EAEH,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAEO,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFG,CAAP;AAIH;;AAvC8F","sourcesContent":["import * as React from 'react';\r\nimport SearchBox from '../searchBox/searchBox';\r\nimport SearchResults from './searchResults/searchResults';\r\nimport axios from 'axios';\r\nimport qs from 'query-string';\r\n\r\nexport default class SearchConsole extends React.Component<any, { items: any, queryText: string }> {\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n\r\n        const queryText = qs.parse(props.location.search).queryText as string;\r\n        if (!queryText) {\r\n            return;\r\n        }\r\n\r\n        this.state = { items: [], queryText };\r\n        this.search(queryText);\r\n    }\r\n\r\n    handleSearch(queryText: string) {\r\n        if (queryText === \"\") {\r\n            return;\r\n        }\r\n\r\n        this.props.history.push({\r\n            pathname: `/search`,\r\n            search: `?queryText=${queryText}`\r\n        });\r\n    }\r\n\r\n    async search(queryText: string) {\r\n        const url = `http://localhost/search?queryText=${queryText.replace(' ', '+')}`;\r\n        const response: any = await axios.get(url);\r\n\r\n        this.setState({ items: response.data.results, queryText });\r\n    }\r\n\r\n    render() {\r\n        const items = this.state ? (this.state.items || []) : [];\r\n        return <div>\r\n            <SearchBox onSearch={this.handleSearch}></SearchBox>\r\n            <SearchResults items={items} ></SearchResults>\r\n        </div>;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}